class ConnectionService{#refToken="";#authToken="";#jwtToken="";#endpoint="https://api.donatty.com";#authService;constructor(e,t){this.#endpoint=this.#fmtApiUri(t),this.#authToken=e,this.#refToken=t,this.#authService=new AuthService(this.authEndpoint)}get authEndpoint(){return this.#endpoint+"/auth/tokens"}get widgetsEndpoint(){return this.#endpoint+("/widgets/"+this.#refToken)}get sseEndpoint(){return this.widgetsEndpoint+"/sse"}get#zoneOffset(){return(new Date).getTimezoneOffset()}#fmtApiUri=e=>{var t=e.length,e=e.slice(t-2,t),t=1+parseInt(e,16)%29,e=new Intl.NumberFormat("en-IN",{minimumIntegerDigits:3}).format(t);return"https://api.donatty.com".replace("://api.",`://api-${e}.`)};async#getJWT(){return this.#authService.getJWT(this.#authToken)}async getSSEConnection(){var e=await this.#getJWT();return new EventSource(this.sseEndpoint+`?jwt=${e}&zoneOffset=`+this.#zoneOffset)}async getData(){try{var e=await this.#getJWT(),{props:{data:{goal:t,goalCollected:i}}}=(await(await fetch(this.widgetsEndpoint,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}})).json()).response;return{goal:t,raised:i}}catch(e){throw console.error("Failed to fetch initial data:",e),e}}}class AuthService{#retryLimit=5;#endpoint="";#token="";#jwt="";constructor(e){this.#endpoint=e}async getJWT(e){return this.#jwt||this.auth(e)}async auth(t,i=0){try{var{accessToken:e}=(await(await fetch(this.#endpoint+"/"+t,{method:"GET",headers:{"Content-Type":"application/json"}})).json()).response;this.#token=t,this.#jwt=e}catch(e){if(console.error("Failed to fetch JWT token:",e),i<this.#retryLimit)return console.error("Retry..."),this.auth(t,i+1)}return this.#jwt}}class SSEService{#RECONNECT_INTERVAL=6e5;#MESSAGE_TYPES={DATA:"DATA",PING:"PING",REFRESH:"REFRESH",DELETE:"DELETE"};#ref;#connectionService;#reconnectionTimeout=null;#eventSource=null;constructor(e,t){this.#connectionService=t,this.#ref=e}async#connectToSSE(){this.#eventSource&&this.#eventSource.close();var e=await this.#connectionService.getSSEConnection();e.onmessage=e=>{this.handleMessage(e.data)},e.onerror=e=>{console.error("SSE error",e),console.error("reconnecting..."),this.#eventSource.close(),this.#clearReconnectTimeout(),setTimeout(()=>this.#connectToSSE(),5e3)},this.#eventSource=e,this.#scheduleReconnect()}#scheduleReconnect(){this.#clearReconnectTimeout(),this.#reconnectionTimeout=setTimeout(()=>{console.info("Reconnecting SSE after 10 minutes..."),this.#connectToSSE()},this.#RECONNECT_INTERVAL)}#clearReconnectTimeout(){this.#reconnectionTimeout&&(clearTimeout(this.#reconnectionTimeout),this.#reconnectionTimeout=null)}#prepareMessage(e){var{action:e,data:t}=JSON.parse(e);let i,n,a;switch(e){case this.#MESSAGE_TYPES.REFRESH:i=this.#MESSAGE_TYPES.DATA,a=t.props.data.goalCollected,n=t.props.data.goal;break;case this.#MESSAGE_TYPES.DATA:i=this.#MESSAGE_TYPES.DATA,a=t.raised;break;default:i=this.#MESSAGE_TYPES.PING}return{type:i,goal:n,raised:a}}handleMessage(e){document.dispatchEvent(new CustomEvent(this.#ref+"_sse_message",{detail:{message:e}}));var{type:e,goal:t,raised:i}=this.#prepareMessage(e);e===this.#MESSAGE_TYPES.DATA&&document.dispatchEvent(new CustomEvent(this.#ref+"_sse_data",{detail:{raised:i,goal:t}}))}async start(){return this.#connectToSSE()}}class DataService{#ref="";#token="";#sseService;#connectionService;goal=0;raised=0;get percent(){return this.raised/this.goal||0}constructor({token:e,ref:t}){this.#token=e,this.#ref=t,this.#connectionService=new ConnectionService(e,t),this.#sseService=new SSEService(t,this.#connectionService),document.addEventListener(t+"_sse_data",({detail:e})=>this.handleData(e)),this.#init()}async#init(){var{goal:e,raised:t}=await this.#connectionService.getData();this.goal=e,this.raised=t,this.#sseService.start()}handleData({raised:e,goal:t}){this.raised=e,null!=t&&(this.goal=t),document.dispatchEvent(new CustomEvent(this.#ref+"_data",{detail:{raised:e,goal:t,percent:this.percent}}))}}class DataController{#dataService;#dataServiceOpposite;get percent(){let e=this.#dataService.percent;var t;return this.#dataServiceOpposite&&(t=this.#dataServiceOpposite.percent,e-=t),e}get diff(){let e=this.#dataService.raised;var t;return this.#dataServiceOpposite&&(t=this.#dataServiceOpposite.raised,e-=t),e}constructor(e,t){document.addEventListener(e.ref+"_data",()=>this.#update(e.ref)),this.#dataService=new DataService(e),t&&(document.addEventListener(t.ref+"_data",()=>this.#update(t.ref)),this.#dataServiceOpposite=new DataService(t))}#update(){var e={percent:this.percent,diff:this.diff,goal:{goal:this.#dataService.goal,raised:this.#dataService.raised,percent:this.#dataService.percent}};this.#dataServiceOpposite&&(e.goalOpposite={goal:this.#dataServiceOpposite.goal,raised:this.#dataServiceOpposite.raised,percent:this.#dataServiceOpposite.percent}),document.dispatchEvent(new CustomEvent("goal_updated",{detail:e}))}getPercents=e=>{let t=this.percent;var i;return e&&(i=this.diff,t=i/e),Math.max(Math.min(t,1),-1)}}export default DataController;