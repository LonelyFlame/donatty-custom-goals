class ConnectionService{_refToken="";_authToken="";_jwtToken="";_endpoint="https://api.donatty.com";_authService;constructor(e,t){this._endpoint=this._fmtApiUri(t),this._authToken=e,this._refToken=t,this._authService=new AuthService(this.authEndpoint)}get authEndpoint(){return this._endpoint+"/auth/tokens"}get widgetsEndpoint(){return this._endpoint+("/widgets/"+this._refToken)}get sseEndpoint(){return this.widgetsEndpoint+"/sse"}get_zoneOffset(){return(new Date).getTimezoneOffset()}_fmtApiUri=e=>{var t=e.length,e=e.slice(t-2,t),t=1+parseInt(e,16)%29,e=new Intl.NumberFormat("en-IN",{minimumIntegerDigits:3}).format(t);return"https://api.donatty.com".replace("://api.",`://api-${e}.`)};async_getJWT(){return this._authService.getJWT(this._authToken)}async getSSEConnection(){var e=await this._getJWT();return new EventSource(this.sseEndpoint+`?jwt=${e}&zoneOffset=`+this._zoneOffset)}async getData(){try{var e=await this._getJWT(),{props:{data:{goal:t,goalCollected:i}}}=(await(await fetch(this.widgetsEndpoint,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}})).json()).response;return{goal:t,raised:i}}catch(e){throw console.error("Failed to fetch initial data:",e),e}}}class AuthService{_retryLimit=5;_endpoint="";_token="";_jwt="";constructor(e){this._endpoint=e}async getJWT(e){return this._jwt||this.auth(e)}async auth(t,i=0){try{var{accessToken:e}=(await(await fetch(this._endpoint+"/"+t,{method:"GET",headers:{"Content-Type":"application/json"}})).json()).response;this._token=t,this._jwt=e}catch(e){if(console.error("Failed to fetch JWT token:",e),i<this._retryLimit)return console.error("Retry..."),this.auth(t,i+1)}return this._jwt}}class SSEService{_RECONNECT_INTERVAL=6e5;_MESSAGE_TYPES={DATA:"DATA",PING:"PING",REFRESH:"REFRESH",DELETE:"DELETE"};_ref;_connectionService;_reconnectionTimeout=null;_eventSource=null;constructor(e,t){this._connectionService=t,this._ref=e}async_connectToSSE(){this._eventSource&&this._eventSource.close();var e=await this._connectionService.getSSEConnection();e.onmessage=e=>{this.handleMessage(e.data)},e.onerror=e=>{console.error("SSE error",e),console.error("reconnecting..."),this._eventSource.close(),this._clearReconnectTimeout(),setTimeout(()=>this._connectToSSE(),5e3)},this._eventSource=e,this._scheduleReconnect()}_scheduleReconnect(){this._clearReconnectTimeout(),this._reconnectionTimeout=setTimeout(()=>{console.info("Reconnecting SSE after 10 minutes..."),this._connectToSSE()},this._RECONNECT_INTERVAL)}_clearReconnectTimeout(){this._reconnectionTimeout&&(clearTimeout(this._reconnectionTimeout),this._reconnectionTimeout=null)}_prepareMessage(e){var{action:e,data:t}=JSON.parse(e);let i,n,a;switch(e){case this._MESSAGE_TYPES.REFRESH:i=this._MESSAGE_TYPES.DATA,a=t.props.data.goalCollected,n=t.props.data.goal;break;case this._MESSAGE_TYPES.DATA:i=this._MESSAGE_TYPES.DATA,a=t.raised;break;default:i=this._MESSAGE_TYPES.PING}return{type:i,goal:n,raised:a}}handleMessage(e){document.dispatchEvent(new CustomEvent(this._ref+"_sse_message",{detail:{message:e}}));var{type:e,goal:t,raised:i}=this._prepareMessage(e);e===this._MESSAGE_TYPES.DATA&&document.dispatchEvent(new CustomEvent(this._ref+"_sse_data",{detail:{raised:i,goal:t}}))}async start(){return this._connectToSSE()}}class DataService{_ref="";_token="";_sseService;_connectionService;goal=0;raised=0;get percent(){return this.raised/this.goal||0}constructor({token:e,ref:t}){this._token=e,this._ref=t,this._connectionService=new ConnectionService(e,t),this._sseService=new SSEService(t,this._connectionService),document.addEventListener(t+"_sse_data",({detail:e})=>this.handleData(e)),this._init()}async_init(){var{goal:e,raised:t}=await this._connectionService.getData();this.goal=e,this.raised=t,this._sseService.start()}handleData({raised:e,goal:t}){this.raised=e,null!=t&&(this.goal=t),document.dispatchEvent(new CustomEvent(this._ref+"_data",{detail:{raised:e,goal:t,percent:this.percent}}))}}class DataController{_dataService;_dataServiceOpposite;get percent(){let e=this._dataService.percent;var t;return this._dataServiceOpposite&&(t=this._dataServiceOpposite.percent,e-=t),e}get diff(){let e=this._dataService.raised;var t;return this._dataServiceOpposite&&(t=this._dataServiceOpposite.raised,e-=t),e}constructor(e,t){document.addEventListener(e.ref+"_data",()=>this._update(e.ref)),this._dataService=new DataService(e),t&&(document.addEventListener(t.ref+"_data",()=>this._update(t.ref)),this._dataServiceOpposite=new DataService(t))}_update(){var e={percent:this.percent,diff:this.diff,goal:{goal:this._dataService.goal,raised:this._dataService.raised,percent:this._dataService.percent}};this._dataServiceOpposite&&(e.goalOpposite={goal:this._dataServiceOpposite.goal,raised:this._dataServiceOpposite.raised,percent:this._dataServiceOpposite.percent}),document.dispatchEvent(new CustomEvent("goal_updated",{detail:e}))}getPercents=e=>{let t=this.percent;var i;return e&&(i=this.diff,t=i/e),Math.max(Math.min(t,1),-1)}}export default DataController;